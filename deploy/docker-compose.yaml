version: '3.8'

services:

  db:
    image: postgres:14.7
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - diploma_postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}
      interval: 3s
      timeout: 3s
      retries: 15
    restart: always


  frontend:
    image: sermalenk/skypro-front:lesson-36
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - django_static:/usr/share/nginx/html/static/
    depends_on:
      api:
        condition: service_started
    restart: always


  collect_static:
    image: azulien/todolist:latest
    env_file: .env
    entrypoint: ''
    volumes:
      - django_static:/opt/static/
    command: python3 manage.py collectstatic -c --no-input


  api:
    image: azulien/todolist:latest
    env_file: .env
    environment:
      POSTGRES_HOST: db
      DEBUG: "false"
    depends_on:
      db:
        condition: service_healthy
    restart: always


volumes:
  diploma_postgres_data:
  django_static:

